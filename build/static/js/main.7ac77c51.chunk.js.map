{"version":3,"sources":["logo.png","components/ContactUs.jsx","components/header/Search.jsx","components/constant.js","components/header/Menu.jsx","components/header/Header.jsx","components/error/HandleError.jsx","components/Loading.jsx","components/error/NoResult.jsx","components/News.jsx","components/Article.jsx","components/error/NotFoundPage.jsx","components/Footer.jsx","components/Home.jsx","serviceWorker.js","index.js"],"names":["module","exports","ContactUs","state","name","email","message","thankYouMessage","loading","errors","handleChange","e","target","value","validEmailRegex","RegExp","length","test","setState","onClose","props","closeModal","handleSubmit","event","preventDefault","error","setTimeout","modalState","this","showHideModal","style","display","id","className","onClick","htmlFor","onChange","type","aria-describedby","rows","role","Component","Search","onClickSearch","clickSearchBtn","aria-label","placeholder","searchValue","to","constants","Menu","menuList","articles","showMobileMenu","showContactUsModal","handleMenuItemClick","handleMenuToggleClick","handleContactUsClick","handleCloseModal","loadData","url","fetch","then","response","json","data","sources","slice","catch","console","data-toggle","data-target","aria-controls","aria-expanded","exact","map","item","index","key","charAt","toUpperCase","pathname","search","Header","src","logo","alt","HandleError","color","Loader","NoResult","News","articleList","fetchDataSearch","prevId","location","finally","match","params","prevProps","prevState","snapshot","checkIsCategoryPage","window","split","source","element","article","width","urlToImage","title","Article","content","href","rel","author","NotFoundPage","Footer","Home","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ac77c51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4abf7003.png\";","import React, {Component} from \"react\";\n\nclass ContactUs extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        message: '',\n        thankYouMessage: false,\n        loading: false,\n        errors: {\n            name: false,\n            email: false,\n            message: false,\n        }\n    };\n\n    handleChange = (e) => {\n        const {name, value} = e.target;\n        let errors = this.state.errors;\n        const validEmailRegex =\n            RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n        switch (name) {\n            case 'name':\n                errors.name =\n                    !(value.length > 2);\n                break;\n            case 'email':\n                errors.email =\n                    !validEmailRegex.test(value);\n                break;\n            case 'message':\n                errors.message =\n                    !(value.length > 5);\n                break;\n            default:\n        }\n        this.setState({errors, [name]: value})\n\n    };\n\n    onClose = () => {\n        this.props.closeModal();\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const error = this.state.errors;\n        const state = this.state;\n        if (state.name !== '' && state.email !== '' && state.message !== '') {\n            if ((!error.name && !error.email && !error.message)) {\n                setTimeout(() => {\n                    this.setState({\n                        thankYouMessage: false\n                    })\n                    this.onClose();\n                }, 2000)\n\n                setTimeout(() => {\n                    this.setState({\n                        thankYouMessage: true,\n                        loading: false,\n                        errors: {\n                            name: false,\n                            email: false,\n                            message: false,\n                        }\n                    })\n\n                }, 500);\n\n                this.setState({\n                    loading: true\n                })\n            }\n        } else {\n            this.setState({\n                errors: {\n                    name: true,\n                    email: true,\n                    message: true,\n                }\n\n            })\n        }\n    };\n\n\n    render() {\n        let modalState;\n        if (this.props.showHideModal) {\n            modalState = 'block'\n        } else {\n            modalState = 'none'\n        }\n        return (\n            <div style={{display: modalState}} id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div style={{display: (!this.state.thankYouMessage) ? 'block' : 'none'}}>\n                        <span onClick={this.onClose} className=\"close\">&times;</span>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail1\">Name</label>\n                                <input\n                                    name=\"name\"\n                                    onChange={this.handleChange}\n                                    value={this.state.name}\n                                    type=\"name\"\n                                    className=\"form-control\"\n                                    id=\"exampleInputName\"\n                                    aria-describedby=\"nameHelp\"\n                                />\n                                <small className=\"text-danger\">\n                                    {(this.state.errors.name) ? 'Name must be 3 characters long!' : ''}\n                                </small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={this.handleChange}\n                                    value={this.state.email}\n                                    className=\"form-control\"\n                                    id=\"exampleInputEmail1\"\n                                    aria-describedby=\"emailHelp\"/>\n                                <small className=\"text-danger\">\n                                    {(this.state.errors.email) ? 'Email is not valid!' : ''}\n                                </small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\">Message</label>\n                                <textarea\n                                    name='message'\n                                    onChange={this.handleChange}\n                                    value={this.state.message}\n                                    className=\"form-control\"\n                                    id=\"exampleFormControlTextarea1\" rows=\"3\"\n                                />\n                                <small className=\"text-danger\">\n                                    {(this.state.errors.message) ? 'Name must be 5 characters long!' : ''}\n                                </small>\n                            </div>\n                            <button\n                                onClick={this.handleSubmit}\n                                type=\"submit\"\n                                className=\"btn btn-color\">\n                                Send\n                            </button>\n                        </form>\n                    </div>\n                    <div style={{display: (this.state.loading) ? 'block' : 'none'}}>\n                        <div className='overlay'>\n                            <div className=\"spinner-border text-primary\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div\n                        className='thankYouMessage'\n                        style={{display: (this.state.thankYouMessage && !this.state.loading) ? 'block' : 'none'}}\n                    >\n                        Thanks for contacting us!\n                    </div>\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\nexport default ContactUs","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass Search extends Component {\n    handleChange = (e) => {\n        this.props.handleChange(e.target.value);\n    };\n    onClickSearch = () => {\n        this.props.clickSearchBtn()\n    };\n\n    render() {\n        return (\n            <form className=\"form-inline my-2 my-lg-0\">\n                <input\n                    className=\"form-control mr-sm-2\"\n                    type=\"search\"\n                    aria-label=\"Search\"\n                    placeholder=\"Search\"\n                    value={this.props.searchValue}\n                    onChange={this.handleChange}\n                />\n                <Link\n                    className=\"btn btn-outline-success my-2 my-sm-0\"\n                    onClick={this.onClickSearch}\n                    to={this.props.to}\n                >\n                    Search\n                </Link>\n            </form>\n        )\n    }\n}\n\nexport default Search;","export const constants = {\n    API_KEY: '82aa87fe9ecc453d852c5f1fbe0018dc',\n};","import React, {Component} from \"react\";\nimport {NavLink, Link} from 'react-router-dom';\nimport ContactUs from \"../ContactUs\";\nimport Search from \"./Search\";\nimport {constants} from \"../constant\";\n\nclass Menu extends Component {\n\n    state = {\n        menuList: [],\n        searchValue: '',\n        articles: [],\n        showMobileMenu: false,\n        showContactUsModal: false\n    };\n\n    componentDidMount() {\n        this.loadData()\n    }\n    handleChange = (searchValue) => {\n        this.setState({searchValue})\n    };\n    handleMenuItemClick = () => {\n        this.setState({\n            searchValue: '',\n            showMobileMenu: !this.state.showMobileMenu\n        })\n    };\n\n    handleMenuToggleClick = (e) => {\n        e.preventDefault();\n        this.setState({showMobileMenu: !this.state.showMobileMenu});\n    };\n\n    handleContactUsClick = (e) => {\n        e.preventDefault()\n        this.setState({showContactUsModal: !this.state.showContactUsModal})\n    };\n\n    handleCloseModal = () => {\n        this.setState({showContactUsModal: false})\n    };\n\n    loadData = () => {\n        const url = `https://newsapi.org/v2/sources?apiKey=${constants.API_KEY}`\n        fetch(url)\n            .then(response => {\n                return response.json().then(data => {\n                    this.setState({menuList: [...data.sources.slice(0, 5)]})\n                });\n            }).catch(error => console.error(error));\n    };\n\n\n    render() {\n        return (\n            <>\n                <button\n                    onClick={this.handleMenuToggleClick}\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div\n                    className=\"collapse navbar-collapse \"\n                    id=\"navbarSupportedContent\"\n                    style={{display: (this.state.showMobileMenu) ? 'block' : 'none'}}\n                >\n                    <ul className=\"navbar-nav mr-auto ml-5\">\n                        <li className=\"nav-item \">\n                            <NavLink className=\"nav-link\" exact to='/'>Home</NavLink>\n                        </li>\n                        {this.state.menuList.map((item, index) => (\n                            <li className=\"nav-item\" key={index}>\n                                <NavLink\n                                    className=\"nav-link\"\n                                    onClick={this.handleMenuItemClick}\n                                    to={`/category/${item.id}`}>\n                                    {item.name.charAt(0).toUpperCase() + item.name.slice(1)}\n                                </NavLink>\n                            </li>\n                        ))}\n                        <li className=\"nav-item\">\n                            <Link\n                                onClick={this.handleContactUsClick}\n                                className=\"nav-link\"\n                                to='contact-us'\n                            >\n                                Contact Us\n                            </Link>\n                        </li>\n\n                    </ul>\n                    <Search\n                        searchValue={this.state.searchValue}\n                        handleChange={this.handleChange}\n                        clickSearchBtn={this.handleMenuItemClick}\n                        to={{\n                            pathname: `/search/${this.state.searchValue}`,\n                            state: {search: this.state.searchValue}\n                        }}\n                    />\n                </div>\n                {this.state.showContactUsModal ?\n                    <ContactUs\n                        closeModal={this.handleCloseModal}\n                        showHideModal={this.state.showContactUsModal}/>\n                    : \"\"\n                }\n            </>\n        )\n    }\n\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport logo from '../../logo.png';\nimport Menu from \"./Menu\";\nimport {Link} from \"react-router-dom\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <Link to='/'>\n                        <img className='img-responsive logo' src={logo} alt=''/>\n                    </Link>\n                    <Menu/>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nexport function HandleError() {\n    return (\n        <div>\n            <h1 style={{color: '#163abe'}}>500</h1>\n            <h4>Unexpected Error</h4>\n            <span>An error occurred and your request couldn't be completed. </span>\n            <p>Please try again</p>\n        </div>\n    )\n};","import React from 'react'\n\nexport function Loader() {\n    return (\n        <div className='overlay'>\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    )\n};","import React from \"react\";\n\nexport function NoResult() {\n    return (\n        <div>\n            <h1>Sorry, there are no results.</h1>\n            <p>Suggestions</p>\n            <ul>\n                <li>Make sure that all words are spelled correctly.</li>\n                <li>Try different keywords.</li>\n                <li>Try more general keywords.</li>\n            </ul>\n        </div>\n    )\n}","import React, {Component} from 'react'\nimport {constants} from './constant';\nimport {Link} from \"react-router-dom\";\nimport Search from \"./header/Search\";\nimport {HandleError} from \"./error/HandleError\";\nimport {Loader} from \"./Loading\";\nimport {NoResult} from \"./error/NoResult\";\n\nclass News extends Component {\n    state = {\n        articleList: [],\n        loading: false,\n        searchValue: null,\n        error: false\n    };\n\n    componentDidMount() {\n        this.fetchDataSearch(this.props.match.params.id, null, this.state.searchValue);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps !== this.props) {\n            this.fetchDataSearch(this.props.match.params.id, prevProps.match.params.id, this.state.searchValue)\n        }\n    }\n\n    handleChange = (searchValue) => {\n        this.setState({searchValue})\n    };\n\n    fetchDataSearch = (id, prevId, searchValue) => {\n        let url = 'http://newsapi.org/v2/everything?';\n        if (!id) {\n            url += `q=-bitcoin`;\n        } else {\n            if (searchValue) {\n                url += `sources=${prevId}&qInTitle=${this.props.location.state.search}`;\n            } else {\n                if (this.props.location.state) {\n                    url += `qInTitle=${id}`;\n                } else {\n                    url += `sources=${id}`;\n                }\n            }\n        }\n        url += `&apiKey=${constants.API_KEY}`;\n\n        this.setState({loading: true, articleList: []});\n\n        fetch(url)\n            .then(response => {\n                return response.json().then(data => {\n                    this.setState({articleList: data.articles})\n                })\n            })\n            .catch(error => {\n                this.setState({error: true})\n            })\n            .finally(() => {\n                this.setState({loading: false, searchValue: '', error: false})\n            });\n    };\n\n\n    render() {\n        const checkIsCategoryPage = window.location.pathname.split('/');\n        if (this.state.error) {\n            return <HandleError/>\n        } else {\n            if (this.state.loading) {\n                return <Loader/>\n            } else {\n                if (this.state.articleList.length === 0) {\n                    return <NoResult/>\n                } else {\n                    return (\n                        <>\n                            {checkIsCategoryPage[1] === 'category' ?\n                                <div className=\"topnav mb-3\">\n                                    <span>{this.state.articleList[0].source.name}</span>\n                                    <div className=\"topnav-right\">\n                                        <Search\n                                            searchValue={this.state.searchValue}\n                                            handleChange={this.handleChange}\n                                            clickSearchBtn={() => {\n                                            }}\n                                            to={{\n                                                pathname: `/category/search/${this.state.searchValue}`,\n                                                state: {search: this.state.searchValue}\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n                                : ''}\n                            <div className=\"card-columns\">\n\n                                {this.state.articleList.map((element) => (\n                                    <Link\n                                        key={element.url}\n                                        to={{\n                                            pathname: `/category/article/${element.source.name}`,\n                                            state: {article: element}\n                                        }}\n                                    >\n                                        <div className=\"card\">\n                                            <img className=\"card-img-top\" style={{width: '100%'}}\n                                                 src={element.urlToImage}/>\n                                            <div className=\"card-body\">\n                                                <h6 className=\"card-title\">{element.title}</h6>\n                                                <p className=\"btn btn-color\">MORE</p>\n                                            </div>\n                                        </div>\n                                    </Link>\n                                ))}\n                            </div>\n                        </>\n                    )\n                }\n            }\n        }\n    }\n\n}\n\nexport default News;","import React from \"react\";\n\nexport default function Article(props) {\n    return (\n        <div>\n            <h4 className=\"media-heading\">\n                {props.location.state.article.title}\n            </h4>\n            <div className='mt-4'>\n                <img className=\"media-object img-responsive mr-5 article-img\"\n                     src={props.location.state.article.urlToImage}\n                     alt=''\n                />\n                <p>{props.location.state.article.content}</p>\n                <p>For more information,\n                    <a\n                        className='link-color'\n                        href={props.location.state.article.url}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        click here\n                    </a>\n                </p>\n            </div>\n            <div className=\"media-body\">\n                <p className=\"text-right\">\n                    {props.location.state.article.author}\n                </p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport function NotFoundPage() {\n    return (\n        <div>\n            <h1 style={{color: '#163abe'}}>400</h1>\n            <h4> page not found</h4>\n            <span>We are sorry but the page you are looking for does not exist.</span>\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport function Footer() {\n    return (\n        <footer className=\"page-footer font-small blue\">\n            <div className=\"footer-copyright text-center py-3\">\n                © 2020 Copyright:\n                <a href=\"https://www.news24.com/\"> news24.com</a>\n            </div>\n        </footer>\n    )\n}","import React, {Component} from 'react'\nimport Header from \"./header/Header\";\nimport '../style.css';\nimport News from \"./News\";\nimport {Route, Switch} from 'react-router-dom';\nimport Article from \"./Article\";\nimport {NotFoundPage} from \"./error/NotFoundPage\";\nimport {Footer} from \"./Footer\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <div className='wrapper'>\n                    <Switch>\n                        <Route exact path=\"/\" component={News}/>\n                        <Route exact path=\"/category/:id\" component={News}/>\n                        <Route exact path=\"/category/article/:name\" component={Article}/>\n                        <Route exact path=\"/search/:id\" component={News}/>\n                        <Route exact path=\"/category/search/:id\" component={News}/>\n                        <Route path=\"*\" component={NotFoundPage}/>\n                    </Switch>\n                </div>\n                <Footer/>\n            </>\n        )\n    }\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n\nvar d = 4\nvar a = 4\n\nvar vf = () => ({a:4})\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home'\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Router>\n        <Home/>\n    </Router>,\ndocument.getElementById('root')\n)\n;\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}